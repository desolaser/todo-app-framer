import type { NextPage } from 'next';
import Head from 'next/head';
import { 
  Button,
  Container, 
  Box, 
  Heading, 
  Stack, 
  Input, 
  Flex,
  Spacer,
  Switch,
  useColorMode, 
  useColorModeValue, 
} from '@chakra-ui/react';
import Task from '../components/Task';
import Todo from '../model/Todo';
import { useAppDispatch, useAppSelector } from '../redux/hooks';
import { add, done, remove } from '../redux/slices/todoSlice';
import { makeId } from '../lib/stringUtils';

const Home: NextPage = () => {
  const dispatch = useAppDispatch();
  const todos = useAppSelector(state => state.todo);
  const { toggleColorMode } = useColorMode();
  const boxColorBox = useColorModeValue('gray.200', 'gray.700');

  /*
    EDICION SI ES QUE LO PONGO

    const editedTodo = todos.filter(todo => todo.id === taskId)[0];
    editedTodo.name =
    dispatch(edit({
      id: taskId,
      todo: editedTodo
    }));
  */

  const handleComplete = (taskId: string) => {
    dispatch(done(taskId));
  }

  const handleDelete = (taskId: string) => {
    dispatch(remove(taskId));
  }

  const handleAdd = () => {
    let todoId = "";
    let repeatedTodo = [];
    do {
      todoId = makeId(8);
      repeatedTodo = todos.filter(item => item.id === todoId);
    } while ( repeatedTodo.length > 0 )

    const todo: Todo = {
      id: todoId,
      title: "",
      description: "",
      isDone: false,
      date: new Date()
    }

    dispatch(add(todo));
  }

  return (
    <Container>
      <Head>
        <title>Todo App Framer</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex>
        <Heading p="1rem">Todo-app</Heading>
        <Spacer />
        <Switch p="2rem" id='color-mode' onChange={toggleColorMode} />
      </Flex>
      <Box>
        <Flex spacing={4}>
          <Input mb="1rem" placeholder='Insert text' />
          <Button colorScheme={'blue'} onClick={_ => handleAdd()}>
            Agregar
          </Button>
        </Flex>
        <Box p="1rem" bg={boxColorBox} rounded="xl">
          <Stack spacing={3}>
            {todos.map((item: Todo) => 
              <Task 
                key={item.id}
                todo={item} 
                handleComplete={handleComplete} 
                handleDelete={handleDelete} 
              />
            )}
          </Stack>
        </Box>
      </Box>      
    </Container>
  );
}

export default Home;