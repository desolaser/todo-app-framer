import type { NextPage } from 'next';
import Head from 'next/head';
import { 
  Button,
  Container, 
  Box, 
  Heading, 
  Stack, 
  FormControl,
  FormErrorMessage,
  Input, 
  Textarea,
  Flex,
  Spacer,
  Switch,
  useColorMode, 
  useColorModeValue, 
} from '@chakra-ui/react';
import Task from '../components/Task';
import Todo from '../model/Todo';
import useTodo from '../hooks/useTodo';

const Home: NextPage = () => {
  const {
    todos,
    formik,
    handleComplete,
    handleRemove
  } = useTodo();
  const { toggleColorMode } = useColorMode();
  const boxColorBox = useColorModeValue('gray.200', 'gray.700');

  return (
    <Container>
      <Head>
        <title>Todo App Framer</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex>
        <Heading p="1rem">Todo-app</Heading>
        <Spacer />
        <Switch p="2rem" id='color-mode' onChange={toggleColorMode} />
      </Flex>
      <Box>
        <form onSubmit={formik.handleSubmit} style={{ width: '100%' }}>
          <FormControl mb="1rem" isInvalid={'title' in formik.errors}>
            <Input 
              placeholder="Insert text"
              name="title"
              value={formik.values.title}
              onChange={formik.handleChange}
            />
            {'title' in formik.errors && 
              <FormErrorMessage>{formik.errors.title}</FormErrorMessage>}            
          </FormControl>
          <FormControl mb="1rem" isInvalid={'description' in formik.errors}>
            <Textarea 
              placeholder="Insert description"
              name="description"
              value={formik.values.description}
              onChange={formik.handleChange}
            />
            {'description' in formik.errors && 
              <FormErrorMessage>{formik.errors.description}</FormErrorMessage>}
          </FormControl>
          <Button colorScheme={'blue'} type="submit" w="full" mb="1rem">
            Agregar
          </Button>
        </form>
        {todos.length > 0 && (
          <Box p="1rem" bg={boxColorBox} rounded="xl">
            <Stack spacing={3}>
              {todos.map((item: Todo) => 
                <Task 
                  key={item.id}
                  todo={item} 
                  handleComplete={handleComplete} 
                  handleRemove={handleRemove} 
                />
              )}
            </Stack>
          </Box>
        )}        
      </Box>
    </Container>
  );
}

export default Home;